[project]
name = "wordplayworkshop2025"
version = "0.1.0"
description = "Research code repository"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "arxiv>=2.2.0",
    "click>=8.1.8",
    "matplotlib>=3.9.4",
    "openai>=1.97.1",
    "pandas>=2.3.1",
    "pdfminer-six>=20250506",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.2",
    "rapidfuzz>=3.13.0",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "scholarly>=1.7.11",
    "tqdm>=4.67.1",
]

[dependency-groups]
dev = [
    "asreview>=1.6.6",
    "black>=25.1.0",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.8.0",
    "ruff>=0.8.6",
    "sqlalchemy>=2.0.41",
    "tabulate>=0.9.0",
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "S",    # flake8-bandit
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D107",  # Missing docstrings
    "S101",  # Use of assert detected
    "S603",  # subprocess call
    "S607",  # Starting a process with a partial executable path
    "ARG001", "ARG002",  # Unused function arguments
    "E501",  # Line too long - we'll handle this case by case
    "PTH111", "PTH123",  # os.path usage - legacy code
    "B017",  # Don't care about exception type in tests
    "E712",  # Allow comparisons to False in tests
    "E722",  # Allow bare except in demo scripts
    "F841",  # Allow unused variables in tests
    "SIM117",  # Allow nested with statements
    "RUF012",  # Mutable class attributes in nested classes
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D", "B904", "PTH100", "PTH118", "PTH120", "S110", "S311", "B023", "B007", "ARG005", "E402"]
"scripts/*" = ["D"]
"notebooks/*" = ["RUF001"]
"src/lit_review/utils/logging_db.py" = ["S608", "E402"]
"src/lit_review/harvesters/*" = ["S113", "S324"]
"src/lit_review/processing/screen_ui.py" = ["S110"]
"src/lit_review/utils/exporter.py" = ["S113"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 72

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = ["tests/"]
